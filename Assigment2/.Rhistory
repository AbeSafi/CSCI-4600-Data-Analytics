### read in data
epi.data <- read.csv("epi_results_2024_pop_gdp_v2.csv", header=TRUE)
library(ggplot2)
library(ggplot2)
library(ggplot2)
library(ggplot2)
### read in data
epi.data <- read.csv("epi_results_2024_pop_gdp_v2.csv", header=TRUE)
load("~/Classes/Semester7/DataAnalytics/Lab2/epi_results_2024_pop_gdp_v2.csv")
### read in data
epi.data <- read.csv("epi_results_2024_pop_gdp_v2.csv", header=TRUE)
### read in data
epi.data <- read.csv("epi_results_2024_pop_gdp_v2.csv", header=TRUE)
Data <- read.csv("epi_results_2024_pop_gdp_v2.csv")
setwd("~/Classes/Semester5/RCOS/CSCI-4600-Data-Analytics/Assigment2")
Data <- read.csv("epi_results_2024_pop_gdp_v2.csv")
ME_subset = Data[Data$region == "Greater Middle East", ]
GW_subset = Data[Data$region == "Global West", ]
library(ggplot2)
ggplot(ME_subset, aes(y = GTI.new)) +
geom_boxplot(fill = "#228B22") +
labs(title = "GTI Boxplot Greater Middle East",  y = "GTI Score")
ggplot(ME_subset, aes(x = GTI.new)) +
geom_histogram(aes(y = after_stat(density)),
bins = 10,
fill = "#228B22",
color = "black") +
geom_density(alpha = 0.5, color = "red", linewidth = 1) +
labs(title = "GTI Histogram in Greater Middle East", x = "EPI Score")
ggplot(GW_subset, aes(y = GTI.new)) +
geom_boxplot(fill = "#aa1") +
labs(title = "GTI Boxplot Greater Middle East",  y = "GTI Score")
ggplot(GW_subset, aes(y = GTI.new)) +
geom_boxplot(fill = "#aa1") +
labs(title = "GTI Boxplot Greater Middle East",  y = "GTI Score")
ggplot(GW_subset, aes(x = GTI.new)) +
geom_histogram(aes(y = after_stat(density)),
bins = 10,
fill = "#aa1",
color = "black") +
geom_density(alpha = 0.5, color = "#22a", linewidth = 1) +
labs(title = "GTI Histogram in Global West", x = "EPI Score")
GTI_ME <- na.omit(ME_subset$GTI.new)
GTI_GW <- na.omit(GW_subset$GTI.new)
qqplot(GTI_ME, GTI_GW,
main = "Greater Middle East vs Global West",
xlab = "GME",
ylab = "GW")
summary(GTI_GDP)
GTI_GDP <- lm(GTI.new ~ gdp, data = Data)
summary(GTI_GDP)
plot(GTI_GTP$fitted.values, GTI_GDP$residuals,
main = "Residuals vs Fitted (GDP)",
xlab = "Fitted Vals", ylab = "Residuals")
plot(GTI_GDP$fitted.values, GTI_GDP$residuals,
main = "Residuals vs Fitted (GDP)",
xlab = "Fitted Vals", ylab = "Residuals")
GTI_POP <- lm(GTI.new ~ population, data = Data)
summary(GTI_GDP)
plot(GTI_GDP$fitted.values, GTI_GDP$residuals,
main = "Residuals vs Fitted (GDP)",
xlab = "Fitted Vals", ylab = "Residuals")
plot(GTI_GDP$fitted.values, GTI_GDP$residuals,
main = "Residuals vs Fitted (GDP)",
xlab = "Fitted Vals", ylab = "Residuals")
plot(GTI_POP$fitted.values, GTI_POP$residuals,
main = "Residuals vs Fitted (Population)",
xlab = "Fitted Vals", ylab = "Residuals")
GTI_GDP_log <- lm(GTI.new ~ log(gdp), data = Data)
summary(GTI_GDP_log)
GTI_POP_log <- lm(GTI.new ~ log(population), data = Data)
summary(GTI_POP_log)
GME_subset <- Data[Data$region == "Greater Middle East", ]
GDP_GME <- lm(GTI.new ~ gdp, data = GME_subset)
GDP_POP <- lm(GTI.new ~ population, data = GME_subset)
summary(GTI_Population)
summary(GTI_POP)
GTI_GDP <- lm(GTI.new ~ gdp, data = Data)
summary(GTI_GDP)
ggplot(Data, aes(x = gdp, y = GTI.new)) +
geom_point(alpha = 0.6, na.rm = TRUE) +
geom_smooth(method = "lm", color = "blue", na.rm = TRUE) +
labs(title = "GDP vs GTI",
x = "GDP",
y = "GTI")
plot(GTI_GDP$fitted.values, GTI_GDP$residuals,
main = "Residuals vs Fitted (GDP)",
xlab = "Fitted Vals", ylab = "Residuals")
abline(h = 0, col = "red")
GTI_POP <- lm(GTI.new ~ population, data = Data)
summary(GTI_POP)
ggplot(Data, aes(x = population, y = GTI.new)) +
geom_point(alpha = 0.6, na.rm = TRUE) +
geom_smooth(method = "lm", color = "blue", na.rm = TRUE) +
labs(title = "Population vs GTI",
x = "Population",
y = "GTI")
ggplot(Data, aes(x = gdp, y = GTI.new)) +
geom_point(alpha = 0.6, na.rm = TRUE) +
geom_smooth(method = "lm", color = "blue", na.rm = TRUE) +
labs(title = "GDP vs GTI",
x = "GDP",
y = "GTI")
ggplot(Data, aes(x = gdp, y = GTI.new)) +
geom_point(alpha = 0.6, na.rm = TRUE) +
geom_smooth(method = "lm", color = "blue", na.rm = TRUE) +
labs(title = "GDP vs GTI",
x = "GDP",
y = "GTI")
ggplot(Data, aes(x = gdp, y = GTI.new)) +
geom_point(alpha = 0.6, na.rm = TRUE) +
geom_smooth(method = "lm", color = "blue", na.rm = TRUE) +
labs(title = "GDP vs GTI",
x = "GDP",
y = "GTI")
plot(GTI_GDP$fitted.values, GTI_GDP$residuals,
main = "Residuals vs Fitted (GDP)",
xlab = "Fitted Vals", ylab = "Residuals")
GME_subset <- Data[Data$region == "Greater Middle East", ]
GDP_GME <- lm(GTI.new ~ gdp, data = GME_subset)
GDP_POP <- lm(GTI.new ~ population, data = GME_subset)
ggplot(GME_subset, aes(x = gdp, y = GTI.new)) +
geom_point() +
geom_smooth(method = "lm", color = "blue") +
labs(title = "Greater Middle East GDP vs GTI")
GTI_GDP_log <- lm(GTI.new ~ log(gdp), data = Data)
summary(GTI_GDP_log)
GTI_POP_log <- lm(GTI.new ~ log(population), data = Data)
summary(GTI_POP_log)
GTI_GDP_log <- lm(GTI.new ~ log(gdp), data = Data)
summary(GTI_GDP_log)
GTI_POP_log <- lm(GTI.new ~ log(population), data = Data)
summary(GTI_POP_log)
ggplot(Data, aes(x = population, y = GTI.new)) +
geom_point(alpha = 0.6, na.rm = TRUE) +
geom_smooth(method = "lm", color = "blue", na.rm = TRUE) +
labs(title = "Population vs GTI",
x = "Population",
y = "GTI")
ggplot(Data, aes(x = population, y = GTI.new)) +
geom_point(alpha = 0.6, na.rm = TRUE) +
geom_smooth(method = "lm", color = "blue", na.rm = TRUE) +
labs(title = "Population vs GTI",
x = "Population",
y = "GTI")
ggplot(Data, aes(x = log(gdp), y = GTI.new)) +
geom_point(alpha = 0.6, na.rm = TRUE) +
geom_smooth(method = "lm", color = "blue", na.rm = TRUE) +
labs(title = "GDP vs GTI",
x = "GDP",
y = "GTI")
ggplot(Data, aes(x = log(population), y = GTI.new)) +
geom_point(alpha = 0.6, na.rm = TRUE) +
geom_smooth(method = "lm", color = "blue", na.rm = TRUE) +
labs(title = "Population vs GTI",
x = "Population",
y = "GTI")
ggplot(Data, aes(x = log(gdp), y = GTI.new)) +
geom_point(alpha = 0.6, na.rm = TRUE) +
geom_smooth(method = "lm", color = "blue", na.rm = TRUE) +
labs(title = "GDP vs GTI",
x = "GDP",
y = "GTI")
)
ggplot(Data, aes(x = log(gdp), y = GTI.new)) +
geom_point(alpha = 0.6, na.rm = TRUE) +
geom_smooth(method = "lm", color = "blue", na.rm = TRUE) +
labs(title = "GDP vs GTI",
x = "GDP",
y = "GTI")
ggplot(Data, aes(x = log(population), y = GTI.new)) +
geom_point(alpha = 0.6, na.rm = TRUE) +
geom_smooth(method = "lm", color = "blue", na.rm = TRUE) +
labs(title = "Population vs GTI",
x = "Population",
y = "GTI")
ggplot(Data, aes(x = population, y = GTI.new)) +
geom_point(alpha = 0.6, na.rm = TRUE) +
geom_smooth(method = "lm", color = "blue", na.rm = TRUE) +
labs(title = "Population vs GTI",
x = "Population",
y = "GTI")
ggplot(Data, aes(x = log(gdp), y = GTI.new)) +
geom_point(alpha = 0.6, na.rm = TRUE) +
geom_smooth(method = "lm", color = "blue", na.rm = TRUE) +
labs(title = "GDP vs GTI",
x = "GDP",
y = "GTI")
plot(GTI_GDP$fitted.values, GTI_GDP_log$residuals,
main = "Residuals vs Fitted (GDP)",
xlab = "Fitted Vals", ylab = "Residuals")
plot(GTI_GDP$fitted.values, GTI_GDP_log$residuals,
main = "Residuals vs Fitted (log GDP)",
xlab = "Fitted Vals", ylab = "Residuals")
ggplot(Data, aes(x = log(gdp), y = GTI.new)) +
geom_point(alpha = 0.6, na.rm = TRUE) +
geom_smooth(method = "lm", color = "blue", na.rm = TRUE) +
labs(title = "log GDP vs GTI",
x = "GDP",
y = "GTI")
library(class)
set.seed(1)
Data_Clean <- na.omit(Data)
Data_Clean <- na.omit(Data)
features <- Data_Clean[, c("AIR.new", "H2O.new", "CCH.new")]
class_labels <- Data_Clean$region
k_value <- 5
predictions <- knn(train = features_three,
test = features_three,
cl = class_labels,
k = k_value)
predictions <- knn(train = features,
test = features,
cl = class_labels,
k = k_value)
conf_matrix <- table(Predicted = predictions, Actual = class_labels)
print(conf_matrix)
accuracy <- sum(diag(conf_matrix)) / sum(conf_matrix)
conf_matrix <- table(Predicted = predictions, Actual = class_labels)
print(conf_matrix)
print(paste("Model 1 Accuracy:", round(accuracy, 4)))
features2 <- Data_Clean[, c("SOE.new", "NOD.new", "VOE.new")]
predictions2 <- knn(train = features2,
test = features2,
cl = class_labels,
k = k_value)
conf_matrix2 <- table(Predicted = predictions2, Actual = class_labels)
print(conf_matrix2)
accuracy2 <- sum(diag(conf_matrix2)) / sum(conf_matrix2)
print(paste("Model 2 Accuracy:", round(accuracy2, 4)))
